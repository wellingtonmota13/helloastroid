{"version":3,"sources":["../../src/redux/index.js"],"names":["Redux","require","Promise","_","composeWithDevTools","fs","mitt","stringify","emitter","reducers","rootNodeMap","WeakMap","addRootNodeToInlineObject","data","nodeId","isPlainObject","isArray","each","o","set","trackInlineObjectsInRootNode","node","v","k","id","exports","initialState","JSON","parse","readFileSync","process","cwd","nodes","e","store","env","REDUX_DEVTOOLS","sitePackageJSON","composeEnhancers","realtime","port","name","createStore","combineReducers","applyMiddleware","saveState","debounce","pickedState","pick","state","writeFile","subscribe","lastAction","getState","emit","type","on","getNodes","values","getNode","hasNodeChanged","digest","internal","contentDigest","loadNodeContent","content","resolve","plugin","flattenedPlugins","find","plug","owner","Error","then","getNodeAndSavePathDependency","path","createPageDependency","getRootNodeId","get"],"mappings":"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","file":"index.js","sourcesContent":["const Redux = require(`redux`)\nconst Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst { composeWithDevTools } = require(`remote-redux-devtools`)\nconst fs = require(`fs`)\nconst mitt = require(`mitt`)\nconst stringify = require(`json-stringify-safe`)\n\n// Create event emitter for actions\nconst emitter = mitt()\n\n// Reducers\nconst reducers = require(`./reducers`)\n\n// Root node tracking\n\n/**\n * Map containing links between inline objects or arrays\n * and Node that contains them\n * @type {Object.<(Object|Array),string>}\n */\nconst rootNodeMap = new WeakMap()\n\n/**\n * Add link between passed data and Node. This function shouldn't be used\n * directly. Use higher level `trackInlineObjectsInRootNode`\n * @see trackInlineObjectsInRootNode\n * @param {(Object|Array)} data Inline object or array\n * @param {string} nodeId Id of node that contains data passed in first parameter\n */\nconst addRootNodeToInlineObject = (data, nodeId) => {\n  if (_.isPlainObject(data) || _.isArray(data)) {\n    _.each(data, o => addRootNodeToInlineObject(o, nodeId))\n    rootNodeMap.set(data, nodeId)\n  }\n}\n\n/**\n * Adds link between inline objects/arrays contained in Node object\n * and that Node object.\n * @param {Node} node Root Node\n */\nconst trackInlineObjectsInRootNode = node => {\n  _.each(node, (v, k) => {\n    // Ignore the node internal object.\n    if (k === `internal`) {\n      return\n    }\n    addRootNodeToInlineObject(v, node.id)\n  })\n  return node\n}\nexports.trackInlineObjectsInRootNode = trackInlineObjectsInRootNode\n\n// Read from cache the old node data.\nlet initialState = {}\ntry {\n  initialState = JSON.parse(\n    fs.readFileSync(`${process.cwd()}/.cache/redux-state.json`)\n  )\n\n  _.each(initialState.nodes, node => {\n    trackInlineObjectsInRootNode(node)\n  })\n} catch (e) {\n  // ignore errors.\n}\n\nlet store\n// Only setup the Redux devtools if explicitly enabled.\nif (process.env.REDUX_DEVTOOLS === `true`) {\n  const sitePackageJSON = require(`${process.cwd()}/package.json`)\n  const composeEnhancers = composeWithDevTools({\n    realtime: true,\n    port: 19999,\n    name: sitePackageJSON.name,\n  })\n  store = Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState,\n    composeEnhancers(Redux.applyMiddleware())\n  )\n} else {\n  store = Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState\n  )\n}\n\n// Persist state.\nconst saveState = _.debounce(state => {\n  const pickedState = _.pick(state, [\n    `nodes`,\n    `status`,\n    `componentDataDependencies`,\n  ])\n  fs.writeFile(\n    `${process.cwd()}/.cache/redux-state.json`,\n    stringify(pickedState, null, 2),\n    () => {}\n  )\n}, 1000)\n\nstore.subscribe(() => {\n  const lastAction = store.getState().lastAction\n  emitter.emit(lastAction.type, lastAction)\n})\n\nemitter.on(`*`, () => {\n  saveState(store.getState())\n})\n\nexports.emitter = emitter\nexports.store = store\nexports.getNodes = () => {\n  let nodes = _.values(store.getState().nodes)\n  return nodes ? nodes : []\n}\nconst getNode = id => store.getState().nodes[id]\nexports.getNode = getNode\nexports.hasNodeChanged = (id, digest) => {\n  const node = store.getState().nodes[id]\n  if (!node) {\n    return true\n  } else {\n    return node.internal.contentDigest !== digest\n  }\n}\n\nexports.loadNodeContent = node => {\n  if (node.internal.content) {\n    return Promise.resolve(node.internal.content)\n  } else {\n    return new Promise(resolve => {\n      // Load plugin's loader function\n      const plugin = store\n        .getState()\n        .flattenedPlugins.find(plug => plug.name === node.internal.owner)\n      const { loadNodeContent } = require(plugin.resolve)\n      if (!loadNodeContent) {\n        throw new Error(\n          `Could not find function loadNodeContent for plugin ${plugin.name}`\n        )\n      }\n\n      return loadNodeContent(node).then(content => {\n        // TODO update node's content field here.\n        resolve(content)\n      })\n    })\n  }\n}\n\nexports.getNodeAndSavePathDependency = (id, path) => {\n  const { createPageDependency } = require(`./actions/add-page-dependency`)\n  const node = getNode(id)\n  createPageDependency({ path, nodeId: id })\n  return node\n}\n\nexports.getRootNodeId = node => rootNodeMap.get(node)\n\n// Start plugin runner which listens to the store\n// and invokes Gatsby API based on actions.\nrequire(`./plugin-runner`)\n"]}